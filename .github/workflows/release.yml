name: Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            binary-suffix: ""
            archive-name: espbrew-macos-arm64.tar.gz
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ""
            archive-name: espbrew-linux-x86_64.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: .exe
            archive-name: espbrew-windows-x86_64.zip

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        cp target/${{ matrix.target }}/release/espbrew${{ matrix.binary-suffix }} dist/
        cp README.md dist/ 2>/dev/null || true
        cp LICENSE* dist/ 2>/dev/null || true
        cd dist
        tar czf ../artifacts/${{ matrix.archive-name }} *
      shell: bash

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        New-Item -ItemType Directory -Force -Path dist
        Copy-Item "target/${{ matrix.target }}/release/espbrew${{ matrix.binary-suffix }}" -Destination "dist/"
        if (Test-Path "README.md") { Copy-Item "README.md" -Destination "dist/" }
        if (Test-Path "LICENSE*") { Copy-Item "LICENSE*" -Destination "dist/" }
        New-Item -ItemType Directory -Force -Path artifacts
        Compress-Archive -Path "dist/*" -DestinationPath "artifacts/${{ matrix.archive-name }}"
      shell: powershell

    - name: Create artifacts directory (Unix)
      if: matrix.os != 'windows-latest'
      run: mkdir -p artifacts

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: artifacts/${{ matrix.archive-name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display structure of downloaded files
      run: ls -R artifacts/
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}